@model IEnumerable<PersonResponse>
@{
    ViewBag.Title = "Persons";
}
<form asp-controller ="Persons" asp-action="Index" method="get">
    <div class="flex">
        <div class="flex-1">
            <div class="text-grey">
                <span>Contacts</span>
            <i class="fa-solid fa-caret-right"></i>
            <span class="text-grey">Persons</span>
            </div>

            <div class="flex-1 text-right">
                <a asp-controller="Persons" asp-action="Create" class="button-link button-blue-back ml">Create Person</a>
                <a asp-controller="Persons" asp-action="PersonPDF" class="button-link button-blue-back ml">Download persons PDF</a>
                <a asp-controller="Persons" asp-action="PersonCSV" class="button-link button-blue-back ml">Download persons CSV</a>
                <a asp-controller="Persons" asp-action="PersonEXCEL" class="button-link button-blue-back ml">Download persons EXCEL</a>
            </div>
        </div>
    </div>
    <div class="table-container">
        <div class="flex">
            <div class="flex-1">
                <h1>Persons</h1>
            </div>
            <div class="flex-3 text-right">
                <label>Search by:</label>
                <select class="search-dropdown" name="searchBy" style="width:200px">
                    @foreach (var field in ViewBag.SearchFields)
                    {
                        if (field.Key == ViewBag.CurrentSearchBy)
                        {
                            <option value="@field.Key" selected="selected">@field.Value</option>
                        }
                        else
                        {
                            <option value="@field.Key">@field.Value</option>
                        }
                    }
                </select>
                <input type="search" id="Search" class="search-text" placeholder="Search" name="searchString" value="@ViewBag.CurrentSearchString" style="width:200px"/>
                <button class="search-button">Search</button>
                <a asp-controller="Persons" asp-action="Index" class="ml link-hover">Clear All</a>
            </div>
        </div>
    


<table class="table w-100 mt persons">
        <thead>
            <tr>

                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName" , nameof(PersonResponse.Name)},
                {"DisplayName" , "Person Name"}
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName" , nameof(PersonResponse.Email)},
                {"DisplayName" , "Email"}
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName" , nameof(PersonResponse.DateOfBirth)},
                {"DisplayName" , "Date Of Birth"}
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName" , nameof(PersonResponse.Age)},
                {"DisplayName" , "Age"}
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName" , nameof(PersonResponse.Gender)},
                {"DisplayName" , "Gender"}
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName" , nameof(PersonResponse.Country)},
                {"DisplayName" , "Country"}
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName" , nameof(PersonResponse.Address)},
                {"DisplayName" , "Address"}
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName" , nameof(PersonResponse.RecieveNewsLetter)},
                {"DisplayName" , "Recive News letteres"}
                })
            </tr>
        </thead>
        <tbody>
            @foreach (PersonResponse person in Model)
            {
                <tr>
                    <td style="width:10%">@person.Name</td>
                    <td style="width:20%">@person.Email</td>
                    <td style="width:10%">@person.DateOfBirth?.ToString("dd MMM yyyy")</td>
                    <td style="width:6%">@person.Age</td>
                    <td style="width:8%">@person.Gender</td>
                    <td style="width:10%">@person.Country</td>
                    <td style="width:10%">@person.Address</td>
                    <td style="width:8%">@person.RecieveNewsLetter</td>
                    <td style="width:20%">
                        <a asp-controller="Persons" asp-action="Edit" asp-route-Id="@person.Id" class="button-link button-blue-back">Edit</a>
                        <a asp-controller="Persons" asp-action="Delete" asp-route-Id="@person.Id" class="button-link button-red-back">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
</table>
    </div>
</form>